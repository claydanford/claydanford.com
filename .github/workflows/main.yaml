name: build ci

on: push

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: install cdk
        run: npm ci
        working-directory: ./cdk

      - name: test cdk
        run: npm run test
        working-directory: ./cdk

      - name: install lambda
        run: npm ci
        working-directory: ./lambda

      - name: build lambda
        run: npm run build
        working-directory: ./lambda

      - name: aws creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.CDK_DEFAULT_ACCOUNT }}:role/GithubActionsRole
          aws-region: ${{ secrets.CDK_DEFAULT_REGION }}

      - name: cdk deploy
        uses: youyo/aws-cdk-github-actions@v2
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          CDK_DEFAULT_REGION: ${{ env.CDK_DEFAULT_REGION }}
        with:
          working_dir: ./cdk
          cdk_subcommand: deploy
          cdk_args: --require-approval never
          actions_comment: false

      - name: install web
        run: yarn
        working-directory: ./web

      - name: lint web
        run: npm run lint
        working-directory: ./web

      - name: build web
        run: npm run build
        working-directory: ./web

      - name: s3 cp
        run: aws s3 cp ./ s3://$(aws ssm get-parameter --name "/claydanford.com/prod/bucket" | jq -r .Parameter.Value)/ --recursive
        working-directory: ./web/out

      - name: clear cache
        run: aws cloudfront create-invalidation --distribution-id $(aws ssm get-parameter --name "/claydanford.com/prod/distribution" | jq -r .Parameter.Value) --paths "/*"
